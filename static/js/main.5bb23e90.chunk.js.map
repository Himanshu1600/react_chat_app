{"version":3,"sources":["MessageForm.jsx","MyMessage.jsx","OtherMessage.jsx","ChatFeed.jsx","Loginform.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","bind","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","OtherMessage","lastmessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","console","log","chats","activeChat","userName","messages","chat","renderReadReceipts","isMymessage","people","map","person","index","last_read","title","keys","Object","key","lastMessagekey","width","lastMessage","renderMessage","height","Loginform","setUsername","password","setPassword","error","seterror","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bb23e90.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const { chatId, creds } = props;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n    setValue(\"\");\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: \"none\" }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import React from \"react\";\r\n\r\nfunction MyMessage({ message }) {\r\n  if (message?.attachments?.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"message-attachment\"\r\n        className=\"message-image\"\r\n        style={{ float: \"right\" }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"message\"\r\n      style={{\r\n        float: \"right\",\r\n        marginRight: \"18px\",\r\n        color: \"white\",\r\n        backgroundColor: \"#3B2A50\",\r\n      }}\r\n    >\r\n      {message.text}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyMessage;\r\n","import React from \"react\";\r\n\r\nfunction OtherMessage({ lastmessage, message }) {\r\n  const isFirstMessageByUser =\r\n    !lastmessage || lastmessage.sender.username !== message.sender.username;\r\n\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n        />\r\n      )}\r\n      {message?.attachments?.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachment\"\r\n          className=\"message-image\"\r\n          style={{ marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            float: \"left\",\r\n            backgroundColor: \"#CABCDC\",\r\n            marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\",\r\n          }}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OtherMessage;\r\n","import React from \"react\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport OtherMessage from \"./OtherMessage\";\r\n\r\nfunction ChatFeed(props) {\r\n  console.log(props);\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMymessage) =>\r\n    chat.people.map(\r\n      (person, index) =>\r\n        person.last_read === message.id && (\r\n          <div\r\n            key={`read_${index}`}\r\n            className=\"read-receipt\"\r\n            style={{\r\n              float: isMymessage ? \"right\" : \"left\",\r\n              backgroundImage:\r\n                person?.person?.avatar && `url(${person?.person?.avatar})`,\r\n            }}\r\n          />\r\n        )\r\n    );\r\n\r\n  const renderMessage = () => {\r\n    const keys = Object.keys(messages);\r\n    // console.log(keys);\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessagekey = index === 0 ? null : keys[index - 1];\r\n      const isMymessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\r\n          <div className=\"message-block\">\r\n            {isMymessage ? (\r\n              <MyMessage message={message} />\r\n            ) : (\r\n              <OtherMessage message={message} lastMessage={lastMessagekey} />\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"read-receipts\"\r\n            style={{\r\n              marginRight: isMymessage ? \"18px\" : \"0px\",\r\n              marginLeft: isMymessage ? \"0px\" : \"68px\",\r\n            }}\r\n          >\r\n            {renderReadReceipts(message, isMymessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  if (!chat) return \"loading...\";\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => `${person.person.username} `)}\r\n        </div>\r\n      </div>\r\n      {renderMessage()}\r\n      <div style={{ height: \"100px\" }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatFeed;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Loginform() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, seterror] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const authObject = {\r\n      \"Project-ID\": \"acafeeb7-f742-47a7-ac2e-b461920c9128\",\r\n      \"User-Name\": username,\r\n      \"User-Secret\": password,\r\n    };\r\n    try {\r\n      await axios.get(\"https://api.chatengine.io/chats\", {\r\n        headers: authObject,\r\n      });\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"password\", password);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      seterror(\"Incorrect credentials\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Welcome to My Chat App</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start Chatting</span>\r\n            </button>\r\n          </div>\r\n          <h2 className=\"error\">{error}</h2>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loginform;\r\n","import React from \"react\";\r\nimport { ChatEngine } from \"react-chat-engine\";\r\nimport \"./App.css\";\r\nimport ChatFeed from \"./ChatFeed\";\r\nimport Loginform from \"./Loginform\";\r\nfunction App() {\r\n  if (!localStorage.getItem(\"username\")) return <Loginform />;\r\n\r\n  return (\r\n    <>\r\n      <ChatEngine\r\n        height=\"100vh\"\r\n        projectID=\"acafeeb7-f742-47a7-ac2e-b461920c9128\"\r\n        userName={localStorage.getItem(\"username\")}\r\n        userSecret={localStorage.getItem(\"password\")}\r\n        renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n        onNewMessage={() => new Audio(\"./sentsound.mp3\").play()}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}